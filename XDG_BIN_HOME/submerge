#!/usr/bin/env sh
set -eu

checksub() { ffmpeg -i "$1" -c copy -map 0:s -f null - -v 0 -hide_banner; }

#They both give the exact same result, but I trust JSON a bit more
streams() {
    ffprobe "$1" 2>&1 1>/dev/null | sed '
        /^ *Stream #/!d;
        s/^ *Stream #//;
        s/: Audio: /: audio: /;
        s/: Video: /: video: /;
        s/: Subtitle: /: subtitle: /;
        s/: Data: /: data: /;
        s/^\([0-9]*:[0-9]*\)\[[0-9a-fx]*\]/\1/;
        s/\([0-9]*:[0-9]*\)\((.*)\|\): \([a-z]*\): \([^ ,]*\).*/\1\t\3\t\4\t\2/;
        s/(\(.*\))$/\1/;
    '
}

ffjson() {
    ffprobe -hide_banner -v quiet -of json -show_format -show_streams -i "$1" 
}

streams() {
    ffjson "$1" \
        | jq -r '.streams | .[] | "0:\(.index)\t\(.codec_type)\t\(
            .codec_name // "none")\t\(.tags.language // .tags.LANGUAGE //
            "")"' 2>/dev/null
}

mergesub() {
    #TODO handle multiple container types
    #TODO handle multiple pre-existing subtitles
    ffmpeg -i file:"$1" -i file:"$2" \
        -map 0:a -c:a copy \
        -map 0:v -c:v copy \
        -map 1:0 -c:s copy \
        -metadata:s:0 language=eng \
        -y output.mkv
}

if ! streams "$1" | grep -q 'subtitle.*\seng' && [ -e "${1%.*}.en.srt" ]; then
    mergesub "$1" "${1%.*}.en.srt"
fi
