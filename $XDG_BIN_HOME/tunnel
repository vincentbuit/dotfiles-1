#!/usr/bin/env sh
#tunnel - set up reverse ssh tunnel
#1: forwardspec, 2: host

autossh_polyfill() { #...: ssh_args
    if command -v autossh >/dev/null 2>&1; then
        autossh "$@"
    else
        (exec sh -c 'while :; do ssh "$@"; sleep 1; done' "$@" \
            >/dev/null 2>&1 &)
    fi
}

tunnel() {
    ps -Ao args | grep jumphost | grep -q "$1" && return 0
    export AUTOSSH_PORT=0
    if ssh -oBatchMode=yes "jumphost@${2##*@}" -i "$XDG_DATA_HOME/ssh/jumphost" \
            true >/dev/null 2>&1; [ $? -ne 255 ]; then
        set "$1" -i "$XDG_DATA_HOME/ssh/jumphost" "jumphost@${2##*@}"
    elif ssh "$2" 'sudo -nl useradd && sudo -nl tee && sudo -nl ex' \
            true >/dev/null 2>&1; then
        ssh "$2" 'sudo useradd -ms /bin/false jumphost' >/dev/null 2>&1
        ssh "$2" 'sudo mkdir -p /home/jumphost/.ssh' >/dev/null 2>&1
        mkdir -p "$XDG_DATA_HOME/ssh"
        yes | ssh-keygen -q -N '' -b 4096 -f "$XDG_DATA_HOME/ssh/jumphost" \
            >/dev/null
        ssh "$2" "sudo ex -s \
            -c 'g/$(cut -d' ' -f3 "$XDG_DATA_HOME/ssh/jumphost.pub")$/d'  \
            -cx /home/jumphost/.ssh/authorized_keys"
        cat "$XDG_DATA_HOME/ssh/jumphost.pub" \
            | ssh "$2" 'sudo tee -a /home/jumphost/.ssh/authorized_keys' \
            >/dev/null
        set -- "$1" -i "$XDG_DATA_HOME/ssh/jumphost" "jumphost@${2##*@}"
    fi
    autossh_polyfill -o "ServerAliveInterval 60" -o "ServerAliveCountMax 3" \
        -oBatchMode=yes -NTR "$@"
}
tunnel "$@"
