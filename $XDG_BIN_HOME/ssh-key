#!/usr/bin/env sh
#ssh-key - manage my ssh 'keys'
set -eu

ssh_key_create() {
    [ "$#" -eq 1 ] || { echo "Usage: ssh-key create SECURITY_REALM"; exit 1; }

    set -- "$1" "$(mktemp)" \
        "$(gpg --list-secret-keys \
            | sed -n 's/^uid.*\[ultimate\].*<\(.*\)>$/\1/p')"
    printf "addkey\n8\ns\ne\na\nq\n2048\n0\nsave\n" >"$2"
    LC_ALL= LANG=en gpg --set-notation comment_en@opengpg-notations.org="$1" \
        --expert --batch --command-file "$2" --edit-key "$3" 2>/dev/null
    rm "$2"
    gpg -K --with-keygrip | awk 'f{print $3;f=0} /\[A\]/{f=1}' \
        >"$GNUPGHOME/sshcontrol"
    gpg -K --with-sig-list --list-options show-notations --with-keygrip \
        --fingerprint --fingerprint | awk '
            /^ssb/ {
                authkey = 0;
                if (index($4, "A")) authkey = 1;
                getline;
                split($0, fp, " ");
                fingerprint = fp[1] fp[2] fp[3] fp[4] fp[5] fp[6] fp[7] fp[8] \
                    fp[9] fp[10];
                cmd = "gpg --export-ssh-key " fingerprint "|cut -d\\  -f1,2" ;
                cmd | getline pubkey;
            }
            /^sig/ { date = $4 }
            /Keygrip/ { grip = $3; }
            /Signature/ {
                comment = substr($0, index($0, "=") + 1);
                if (authkey) print pubkey, date, comment;
            }
        '\
        | grep "$1" >"$HOME/.ssh/$1.pub"
    gpg --export-secret-keys -a >"$GNUPGHOME/keys.asc"
}

ssh_key_rmhost() {
    sed -e "$1"d -if "$HOME/.ssh/known_hosts"
}

ssh_key_"$@"
